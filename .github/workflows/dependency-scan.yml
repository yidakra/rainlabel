name: Dependency Scan

on:
  push:
    branches: [ main, master, develop, '**' ]
  pull_request:
    branches: [ '**' ]
  workflow_dispatch: {}

jobs:
  scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install backend dependencies
        env:
          PIP_INDEX_URL: https://pypi.org/simple
        run: |
          python -m pip install --upgrade pip
          python -m pip install --no-cache-dir -r backend/requirements.txt

      - name: Show resolved versions
        run: |
          python -c "import sys; print(sys.version)"
          pip list --format=columns
          python - << 'PY'
          import importlib
          try:
              import starlette
              print('Starlette version:', starlette.__version__)
          except Exception as e:
              print('Starlette not available:', e)
          try:
              import uvicorn
              print('Uvicorn version:', uvicorn.__version__)
          except Exception as e:
              print('Uvicorn not available:', e)
          PY

      - name: Verify uvicorn version
        run: |
          python - << 'PY'
          import uvicorn
          assert uvicorn.__version__ == '0.35.0', f"Unexpected uvicorn version: {uvicorn.__version__}"
          print('Uvicorn provenance pinned to PyPI and version validated.')
          PY

      - name: pip-audit
        run: |
          python -m pip install pip-audit
          pip-audit -r backend/requirements.txt --strict

      - name: Safety check
        run: |
          python -m pip install safety
          safety check -r backend/requirements.txt --full-report

      - name: Install OSV Scanner
        run: |
          mkdir -p "$HOME/.local/bin"
          curl -sSfL https://raw.githubusercontent.com/google/osv-scanner/main/install.sh | sh -s -- -b "$HOME/.local/bin"
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: OSV Scanner
        run: |
          osv-scanner -r backend

